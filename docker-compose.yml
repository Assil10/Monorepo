version: '3.8'

networks:
  app-network:
    driver: bridge

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: ${NODE_ENV:-development}
    ports:
      - "${BACKEND_PORT}:5000"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - DB_HOST=mysql
      - DB_USER=${MYSQL_USER:-root}
      - DB_PASSWORD=${MYSQL_PASSWORD:-korpor123}
      - DB_NAME=${MYSQL_DATABASE:-korpor_dev}
      - DB_PORT=3306
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
    networks:
      - app-network
    profiles: ["backend", "all"]

  front-backoffice:
    build:
      context: ./front-backoffice
      dockerfile: Dockerfile
      target: ${NODE_ENV:-development}
    ports:
      - "${BACKOFFICE_PORT}:5173"
    environment:
      - VITE_HOST=0.0.0.0
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:5173/"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1.2G
    networks:
      - app-network
    profiles: ["frontend", "all"]

  front-mobile:
    build:
      context: ./front-mobile
      dockerfile: Dockerfile
      target: ${NODE_ENV:-development}
    ports:
      - "${EXPO_PORT}:19000"
      - "${EXPO_DEV_PORT}:19001"
      - "${EXPO_DEBUG_PORT}:19002"
    environment:
      - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
      - REACT_NATIVE_PACKAGER_HOSTNAME=${EXPO_HOSTNAME:-localhost}
    volumes:
      - ./front-mobile:/app
      - /app/node_modules
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:19000/status"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s
    deploy:
      resources:
        limits:
          cpus: '1.5'
          memory: 2G
    networks:
      - app-network
    profiles: ["mobile", "all"]
    
  nginx-proxy:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/certs:/etc/nginx/certs
    depends_on:
      - backend
      - front-backoffice
    restart: unless-stopped
    networks:
      - app-network
    profiles: ["proxy", "all"]
    
  mysql:
    image: mysql:8.0
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-korpor123}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-korpor_dev}
      - MYSQL_USER=${MYSQL_USER:-korpor}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-korpor123}
    volumes:
      - mysql-data:/var/lib/mysql
      - ./korpor_dev.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-korpor123}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - app-network
    profiles: ["backend", "all"]
    
volumes:
  mysql-data: